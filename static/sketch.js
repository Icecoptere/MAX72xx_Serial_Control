function sendMatrix(){
    socket.emit('updateFront', {type:"newMatrix",data:
    [['1', '0', '0', '0', '0', '0', '0', '0'],
     ['1', '1', '0', '0', '0', '0', '0', '0'],
     ['1', '1', '1', '0', '0', '0', '0', '0'],
     ['1', '1', '1', '1', '0', '0', '0', '0'],
     ['1', '1', '1', '1', '1', '0', '0', '0'],
     ['1', '1', '1', '1', '1', '1', '0', '0'],
     ['1', '1', '1', '1', '1', '1', '1', '0'],
     ['1', '1', '1', '1', '1', '1', '1', '1'],
     ['1', '1', '1', '1', '1', '1', '1', '0'],
     ['1', '1', '1', '1', '1', '1', '0', '0'],
     ['1', '1', '1', '1', '1', '0', '0', '0'],
     ['1', '1', '1', '1', '0', '0', '0', '0'],
     ['1', '1', '1', '0', '0', '0', '0', '0'],
     ['1', '1', '0', '0', '0', '0', '0', '0'],
     ['1', '0', '0', '0', '0', '0', '0', '0'],
     ['0', '0', '0', '0', '0', '0', '0', '0'],
     ['1', '0', '0', '0', '0', '0', '0', '0'],
     ['1', '1', '0', '0', '0', '0', '0', '0'],
     ['1', '1', '1', '0', '0', '0', '0', '0'],
     ['1', '1', '1', '1', '0', '0', '0', '0'],
     ['1', '1', '1', '1', '1', '0', '0', '0'],
     ['1', '1', '1', '1', '1', '1', '0', '0'],
     ['1', '1', '1', '1', '1', '1', '1', '0'],
     ['1', '1', '1', '1', '1', '1', '1', '1'],
     ['1', '1', '1', '1', '1', '1', '1', '0'],
     ['1', '1', '1', '1', '1', '1', '0', '0'],
     ['1', '1', '1', '1', '1', '0', '0', '0'],
     ['1', '1', '1', '1', '0', '0', '0', '0'],
     ['1', '1', '1', '0', '0', '0', '0', '0'],
     ['1', '1', '0', '0', '0', '0', '0', '0'],
     ['1', '0', '0', '0', '0', '0', '0', '0'],
     ['0', '0', '0', '0', '0', '0', '0', '0']]});
}

function doCycle(){
    socket.emit('updateFront', {type:"cycle",data:1})
}

//----------------------------------------------------------------------------------

var socket;
var isConnected = false;
var connectionTries = 0;

function connectToServer(){
  socket = io("ws://localhost:9009");
  connectionTries++;
}

connectToServer();

socket.on('connect', function() {
  isConnected = true;
  console.log("We are connected");
  socket.emit('connectionACK', {data: 'I\'m connected!'});
});

socket.on('update', function(data){
  let params = data['data'];
  let command = params.split(" ")[0];
  console.log(command);
});

setInterval(function() {
  if(!isConnected && connectionTries <= 3) {
    connectToServer();
  }

  if(connectionTries > 3){
    console.log("Connection to server timeout");
  }
}, 6000);